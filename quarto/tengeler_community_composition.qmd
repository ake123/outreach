---
title: "Compositional Heatmaps"
format: revealjs
editor: visual
smaller: true
bibliography: references.bib
---

## Example 1.1

The following packages are needed to succesfully run the examples in this notebook:

-   _mia_: tools for microbiome data analysis

-   _ComplexHeatmap_: plotting heatmaps

```{r}
#| label: setup
#| include: false
library(mia)
library(ComplexHeatmap)

knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = TRUE)
```

To begin with, we import Tengeler2020 from the mia package and store it into a variable.

```{r}
#| label: import-tengeler
# load dataset and store it into tse
data("Tengeler2020", package = "mia")
tse <- Tengeler2020
```

First of all, we transform the counts assay to relative abundances and store the new assay back in the TreeSE.

```{r}
#| label: transform-relabundance
tse <- transformAssay(tse, method = "relabundance")
```

## Why relative abundances?

Relative abundances are useful because they are not affected by
**compositionality**, which is present in the counts assay due to
**sequencing bias** (the unequal amplification of DNA from two different samples
due to random effects).

```{r}
#| label: tab-top
tse_phylum <- mergeFeaturesByRank(tse, rank = "Phylum")

tse_list <- splitOn(tse_phylum, f = "patient_status")

top_tab_list <- lapply(
    tse_list,
    function(x) round(rowMeans(assay(x, "relabundance")[getTopTaxa(x, top = 4L), ]) * 100, 1)
)

knitr::kable(cbind(top_tab_list[[1]], top_tab_list[[2]]), col.names = c("ADHD", "Control"))
```

## Example 1.2

Next, we agglomerate the experiment to the order level, so that information is
more condensed and therefore easier to visualise and interpret.

```{r}
#| label: agglomerate-order
tse_order <- mergeFeaturesByRank(tse, rank = "Order")
```

We then perform a **CLR transformation** sample-wise and a **Z transformation**
feature-wise. The former creates a more homogeneous (logarithmic) scale for the
usually very skewed microbiome data, whereas the latter normalises the features
across samples for better comparisons between samples.

```{r}
#| label: transform-clrz
# transform relative abundance to clr
tse_order <- transformAssay(tse_order,
                            assay.type = "relabundance",
                            method = "clr",
                            pseudocount = 1,
                            MARGIN = "samples")

# transform clr to z
tse_order <- transformAssay(tse_order,
                            assay.type = "clr", 
                            method = "z",
                            name = "clr_z",
                            MARGIN = "features")
```

## Example 1.3

Finally, we plot the compositional heatmap with the ComplexHeatmap package and
illustrate it in @fig-compheat.

```{r}
#| label: fig-compheat
#| fig-cap: Heatmap of CLR-Z assay where columns correspond to samples and rows
#|   to taxa agglomerated by order.
hm1 <- Heatmap(assay(tse_order, "clr_z"), name = "clr-z")
hm1
```

## Why clr-z transformation?

```{r}
hm2 <- Heatmap(assay(tse_order, "counts"), name = "counts")
hm3 <- Heatmap(assay(tse_order, "relabundance"), name = "relabundance")
hm1 + hm2 + hm3
```

## Exercise 1

- [exercise 9.2](https://microbiome.github.io/OMA/docs/devel/pages/98_exercises.html#heatmap-visualization)
- refine exercise 9.2 and make a new one with some heatmap functionality
